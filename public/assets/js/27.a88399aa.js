(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{507:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"函数的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的概念"}},[s._v("#")]),s._v(" 函数的概念")]),s._v(" "),a("p",[s._v("在 JS 里面，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。虽然 for循环语句也能实现一些简单的重复操作，但是比较具有局限性，此时我们就可以使用 JS 中的函数。")]),s._v(" "),a("p",[s._v("函数：就是"),a("strong",[s._v("封装了一段可被重复调用执行的代码块")]),s._v("。通过此代码块可以"),a("strong",[s._v("实现大量代码的重复使用")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"函数的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的使用"}},[s._v("#")]),s._v(" 函数的使用")]),s._v(" "),a("h3",{attrs:{id:"声明函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明函数"}},[s._v("#")]),s._v(" 声明函数")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数体代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("function 是声明函数的关键字,必须小写")]),s._v(" "),a("li",[s._v("由于函数一般是为了实现某个功能才定义的， 所以通常我们将函数名命名为动词，比如 getSum")])]),s._v(" "),a("h3",{attrs:{id:"调用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用函数"}},[s._v("#")]),s._v(" 调用函数")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过调用函数名来执行函数体代码")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("调用的时候千万不要忘记添加小括号")]),s._v(" "),a("li",[s._v("声明函数本身并不会执行代码，只有调用函数时才会执行函数体代码。")])]),s._v(" "),a("h3",{attrs:{id:"函数封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数封装"}},[s._v("#")]),s._v(" 函数封装")]),s._v(" "),a("p",[s._v("函数的封装是把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* \n   计算1-100之间值的函数 函数封装示例\n*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" sumNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 准备一个变量，保存数字和")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sumNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 把每个数值 都累加 到变量中")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sumNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"函数的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[s._v("#")]),s._v(" 函数的参数")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("形参：函数定义时设置接收调用时传入")])]),s._v(" "),a("li",[a("p",[s._v("实参：函数调用时传入小括号内的真实数据")])])]),s._v(" "),a("p",[s._v("参数的作用 : 在函数内部某些值不能固定，我们可以通过参数在调用函数时传递不同的值进去。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 带参数的函数声明")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 形参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以定义任意多的参数，用逗号分隔")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数体")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 带参数的函数调用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("实参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 实参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 实参"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ol",[a("li",[s._v("调用的时候实参值是传递给形参的")]),s._v(" "),a("li",[s._v("形参简单理解为：不用声明的变量")]),s._v(" "),a("li",[s._v("实参和形参的多个参数之间用逗号（,）分隔")])]),s._v(" "),a("p",[a("strong",[s._v("函数形参和实参数量不匹配时")])]),s._v(" "),a("ul",[a("li",[s._v("实参等于形参\n"),a("ul",[a("li",[s._v("输出正确结果")])])]),s._v(" "),a("li",[s._v("实参个数多余形参个数\n"),a("ul",[a("li",[s._v("只取到形参个数")])])]),s._v(" "),a("li",[s._v("实参个数小于形参个数\n"),a("ul",[a("li",[s._v("多的形参定义为 "),a("code",[s._v("Undefined")]),s._v(" ，结果为 "),a("code",[s._v("NaN")])])])])]),s._v(" "),a("h2",{attrs:{id:"函数的返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的返回值"}},[s._v("#")]),s._v(" 函数的返回值")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("return")])])]),s._v(" "),a("p",[s._v("返回值：函数调用整体代表的数据；函数执行完成后可以通过return语句将指定数据返回 。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" 函数名（）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("  需要返回的值；\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时调用函数就可以得到函数体内return 后面的值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("在使用 return 语句时，函数会停止执行，并返回指定的值")]),s._v(" "),a("li",[s._v("如果函数没有 return ，返回的值是 undefined")])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("break")]),s._v(" , "),a("code",[s._v("continue")]),s._v(" , "),a("code",[s._v("return")]),s._v(" 的区别：")]),s._v(" "),a("ul",[a("li",[s._v("break ：结束当前的循环体（如 for、while）")]),s._v(" "),a("li",[s._v("continue ：跳出本次循环，继续执行下次循环（如 for、while）")]),s._v(" "),a("li",[s._v("return ：不仅可以退出循环，还能够返回 return 语句中的值，同时还可以结束当前的函数体内的代码")])])]),s._v(" "),a("h2",{attrs:{id:"arguments-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-的使用"}},[s._v("#")]),s._v(" arguments 的使用")]),s._v(" "),a("p",[s._v("当不确定有多少个参数传递的时候，可以用 arguments 来获取。")]),s._v(" "),a("p",[s._v("JavaScript 中，arguments实际上它是当前函数的一个内置对象。所有函数都内置了一个 arguments 对象，arguments 对象中存储了传递的所有实参。arguments展示形式是一个伪数组，因此可以进行遍历。")]),s._v(" "),a("p",[s._v("伪数组具有以下特点：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("具有 length 属性")])]),s._v(" "),a("li",[a("p",[s._v("按索引方式储存数据")])]),s._v(" "),a("li",[a("p",[s._v("不具有数组的 push , pop 等方法")])])]),s._v(" "),a("h2",{attrs:{id:"函数复调"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数复调"}},[s._v("#")]),s._v(" 函数复调")]),s._v(" "),a("p",[s._v("函数内部可以调用另一个函数，在同一作用域代码中，函数名即代表封装的操作，使用函数名加括号即可以将封装的操作执行。")]),s._v(" "),a("h2",{attrs:{id:"函数的两种声明方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的两种声明方式"}},[s._v("#")]),s._v(" 函数的两种声明方式")]),s._v(" "),a("h3",{attrs:{id:"命名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名函数"}},[s._v("#")]),s._v(" 命名函数")]),s._v(" "),a("p",[s._v("利用函数关键字 function 自定义函数方式")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明定义方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。")]),s._v(" "),a("p",[s._v("JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。")]),s._v(" "),a("p",[s._v("详见："),a("a",{attrs:{href:"https://www.runoob.com/js/js-hoisting.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript 变量提升"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"匿名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数"}},[s._v("#")]),s._v(" 匿名函数")]),s._v(" "),a("p",[s._v("利用函数表达式，可以将函数匿名。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这是函数表达式写法，匿名函数后面跟分号结束")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// code")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用的方式，函数调用必须写到函数体下面")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);